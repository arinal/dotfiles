setopt NO_HUP
setopt interactivecomments

autoload -Uz compinit && compinit
bindkey -v

show_logos=("fastfetch" "pokego -r 1-8 --no-title")
$(shuf -n1 -e "${show_logos[@]}")
echo "\n"

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"

zinit ice lucid wait"0" atclone"sed -ie 's/fc -rl 1/fc -rli 1/' shell/key-bindings.zsh" \
  atpull"%atclone" multisrc"shell/{completion,key-bindings}.zsh" id-as junegunn/fzf_completions \
  pick"/dev/null"
zinit light junegunn/fzf

zinit snippet PZT::modules/history/init.zsh

zinit light Aloxaf/fzf-tab
zinit ice wait'0' blockf lucid; zinit light zsh-users/zsh-completions
zinit ice lucid wait"1" lucid atload"!_zsh_autosuggest_start"; zinit load zsh-users/zsh-autosuggestions
zinit ice from'gh-r' as'program'; zinit light sei40kr/fast-alias-tips-bin
zinit light sei40kr/zsh-fast-alias-tips
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light mafredri/zsh-async

alias f=open_yazi # yazi file manager
alias e=$EDITOR
alias ee='neovide&'
alias ls='lsd'
alias l='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'
alias mkdir='mkdir -p'
alias tm='tmux'
alias ldr=lazydocker
alias g=lazygit
alias jy='convfmt -f json -t yaml'

aurhelper='paru'
# aurhelper='yay'
alias pi='$aurhelper --bottomup' # install package
alias pu='$aurhelper -Rns'  # uninstall package
alias pup='$aurhelper -Syu' # update system/package/aur
alias pl='$aurhelper -Qs'   # list installed package
alias pa='$aurhelper -Ss'   # list availabe package
alias pc='$aurhelper -Sc'   # remove unused cache
alias po='$aurhelper -Qtdq | $aurhelper -Rns -' # remove unused packages
alias cs=coursier

## Editor mode
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^v' edit-command-line
bindkey -M vicmd '^v' edit-command-line
bindkey jk vi-cmd-mode

## Vi mode
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]]  ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]]     ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
echo -ne '\e[5 q'
preexec() {
  echo -ne '\e[5 q'
}

eval "$(zoxide init zsh --cmd j)"
alias zi=__zoxide_zi $@

## yazi file manager
function open_yazi() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

omp_theme="dracula"
omp_location="/usr/share/oh-my-posh"
#omp_location=$(brew --prefix oh-my-posh)

function oth() {
  selected=$(ls /usr/share/oh-my-posh/themes | 
    sed 's/\.omp\.json$//' | 
    fzf --preview "oh-my-posh print primary --config $omp_location/themes/{}.omp.json" \
    --height=50% \
    --layout=reverse \
    --border=rounded \
    --prompt="Theme > ")
  if [[ -n "$selected" ]]; then
    temp_file=$(mktemp)
    
    cat ~/.zshrc | awk -v theme="$selected" '{
      if ($0 ~ /^omp_theme="[^"]*"/) {
        print "omp_theme=\"" theme "\""
      } else {
        print $0
      }
    }' > $temp_file
    
    cat $temp_file > ~/.zshrc
    rm $temp_file
    eval "$(oh-my-posh init zsh --config $omp_location/themes/$selected.omp.json)"
    echo "Theme updated to $selected"
  fi
}

eval "$(oh-my-posh init zsh --config $omp_location/themes/$omp_theme.omp.json)"
